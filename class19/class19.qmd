---
title: "Class 19: Investigating Pertussis Resurgence"
author: "Angela Liu"
format: pdf
---

# 1. Investigating Pertussis Cases by Year

The CDC tracks cases of Pertussis in the US. We can get their data by web-scrapping.

> Q1. With the help of the R “addin” package datapasta assign the CDC pertussis case number data to a data frame called cdc and use ggplot to make a plot of cases numbers over time.


```{r}
# install.packages("datapasta")
```

Go to "Addins" in RStudio and paste the CDC data as a data frame.
```{r echo = FALSE}
# code echo = FALSE will run the code but won't print it out in the pdf/html
cdc <- data.frame(
                                 year = c(1922L,1923L,1924L,1925L,
                                          1926L,1927L,1928L,1929L,1930L,1931L,
                                          1932L,1933L,1934L,1935L,1936L,
                                          1937L,1938L,1939L,1940L,1941L,1942L,
                                          1943L,1944L,1945L,1946L,1947L,
                                          1948L,1949L,1950L,1951L,1952L,
                                          1953L,1954L,1955L,1956L,1957L,1958L,
                                          1959L,1960L,1961L,1962L,1963L,
                                          1964L,1965L,1966L,1967L,1968L,1969L,
                                          1970L,1971L,1972L,1973L,1974L,
                                          1975L,1976L,1977L,1978L,1979L,1980L,
                                          1981L,1982L,1983L,1984L,1985L,
                                          1986L,1987L,1988L,1989L,1990L,
                                          1991L,1992L,1993L,1994L,1995L,1996L,
                                          1997L,1998L,1999L,2000L,2001L,
                                          2002L,2003L,2004L,2005L,2006L,2007L,
                                          2008L,2009L,2010L,2011L,2012L,
                                          2013L,2014L,2015L,2016L,2017L,2018L,
                                          2019L),
         cases = c(107473,164191,165418,152003,
                                          202210,181411,161799,197371,
                                          166914,172559,215343,179135,265269,
                                          180518,147237,214652,227319,103188,
                                          183866,222202,191383,191890,109873,
                                          133792,109860,156517,74715,69479,
                                          120718,68687,45030,37129,60886,
                                          62786,31732,28295,32148,40005,
                                          14809,11468,17749,17135,13005,6799,
                                          7717,9718,4810,3285,4249,3036,
                                          3287,1759,2402,1738,1010,2177,2063,
                                          1623,1730,1248,1895,2463,2276,
                                          3589,4195,2823,3450,4157,4570,
                                          2719,4083,6586,4617,5137,7796,6564,
                                          7405,7298,7867,7580,9771,11647,
                                          25827,25616,15632,10454,13278,
                                          16858,27550,18719,48277,28639,32971,
                                          20762,17972,18975,15609,18617)
       )
```


```{r}
library(ggplot2)
baseplot <- ggplot(cdc, aes(year, cases)) +
  geom_point() + 
  geom_line() + 
  labs(x = "Year", y = "Number of Cases", title = "Pertussis Cases by Year (1922-2019)")
baseplot
```


> Q2. Using the ggplot geom_vline() function add lines to your previous plot for the 1946 introduction of the wP vaccine and the 1996 switch to aP vaccine (see example in the hint below). What do you notice?

```{r}
baseplot + geom_vline(xintercept = 1946, color = "blue", linetype = 3) +
  geom_text(mapping = aes(x = 1946, y = 3e+05, label = "wP")) + 
  geom_vline(xintercept = 1996, color = "red", linetype = 3) +
  geom_text(mapping = aes(x = 1996, y = 3e+05, label = "aP"))
```



> Q3. Describe what happened after the introduction of the aP vaccine? Do you have a possible explanation for the observed trend?

After the aP vaccine, the cases of pertussis remained low but started to increase by a bit. This could be due to the fact that the vaccine rollout took awhile with some more hesitancy as the vaccine is administered at a very young age. 


# Exploring CMI-PB Data

The CMI-PB project collects data on aP and wP individuals. and their immune response to infection and/or booster shots.

Since the CMI-PB API returns JSON data, let's install the package **jsonlite**.

```{r}
# install.packages("jsonlite")
library(jsonlite)
```

Now we can simplify the JSON key-value pair arrays into R data frames more efficiently.

```{r}
# simplifyVector will return the dataframe as a vector
subject <- read_json("https://www.cmi-pb.org/api/subject", simplifyVector = TRUE)
head(subject, 3)
```


> Q4. How may aP and wP infancy vaccinated subjects are in the dataset?

```{r}
table(subject$infancy_vac)
```

There are 47 aP and 49 wP infancy vaccinated subjects. 

> Q5. How many Male and Female subjects/patients are in the dataset?

```{r}
table(subject$biological_sex)
```

There are 66 females and 30 males. 

> Q6. What is the breakdown of race and biological sex (e.g. number of Asian females, White males etc…)?

```{r}
table(subject$race, subject$biological_sex)
```

## Working with Dates

```{r}
library(lubridate)
```

> Q7. Using this approach determine (i) the average age of wP individuals, (ii) the average age of aP individuals; and (iii) are they significantly different?

```{r}
today()

# get the ages of the individuals with today's date
subject$age <- today() - ymd(subject$year_of_birth)
head(subject$age)
```
```{r}
library(dplyr)
ap.age <- filter(subject, infancy_vac == "aP")$age
wp.age <- filter(subject, infancy_vac == "wP")$age

time_length(mean(ap.age), "years")
time_length(mean(wp.age), "years")

t.test(ap.age, wp.age)

```

The average age of wP individuals is 36.36 years, of aP individuals is 25.52. The average ages are significantly different.

> Q8. Determine the age of all individuals at time of boost?

```{r}
boost_time <- ymd(subject$date_of_boost) - ymd(subject$year_of_birth)
age_at_boost <- time_length(boost_time, "year")
head(age_at_boost)
```


> Q9. With the help of a faceted boxplot (see below), do you think these two groups are significantly different?

```{r}
ggplot(subject) +
  aes(time_length(age, "year"),
      fill=as.factor(infancy_vac)) +
  geom_histogram(show.legend=FALSE) +
  facet_wrap(vars(infancy_vac), nrow=2) 

```


Yes, looking at the boxplot, the groups are significantly different as they have very different spreads and centers.


### Joining Multiple Tables

Read the specimen and ab_titer tables into R and store the data as specimen and titer named data frames.
```{r}
# Complete the API URLs...
specimen <- read_json("https://www.cmi-pb.org/api/specimen", simplifyVector = TRUE) 
titer <- read_json("https://www.cmi-pb.org/api/ab_titer", simplifyVector = TRUE) 
head(specimen)
head(titer)

```

To know whether a given specimen_id comes from an aP or wP individual we need to merge our specimen and subject data frames. The **dplyr** package has a family of join() functions that can help us with this common task:

> Q9. Complete the code to join specimen and subject tables to make a new merged data frame containing all specimen records along with their associated subject details:

```{r}
meta <- inner_join(specimen, subject)
dim(meta)
head(meta)
```


> Q10. Now using the same procedure join meta with titer data so we can further analyze this data in terms of time of visit aP/wP, male/female etc.

```{r}
abdata <- inner_join(titer, meta)
dim(abdata)
```

> Q11. How many specimens (i.e. entries in abdata) do we have for each isotype?

```{r}
table(abdata$isotype)

```

There are six specimens -- IgE, IgG, IgG1, IgG2, IgG3, and IgG4.


> Q12. What do you notice about the number of visit 8 specimens compared to other visits?

```{r}
table(abdata$visit)
```

There are significantly less number of visit 8 specimens compared to the others. 

It is still quite small as it is currently occurring. It is recommended that we remove visit 8 from our analysis.


## Examine IgG1 Ab Titer Levels

Now using our joined/merged/linked abdata dataset filter() for IgG1 isotype and exclude the small number of visit 8 entries.

```{r}
ig1 <- abdata %>% filter(isotype == "IgG1", visit!=8)
head(ig1)
```


> Q13. Complete the following code to make a summary boxplot of Ab titer levels for all antigens:

```{r}
ggplot(ig1) +
  aes(MFI, antigen) +
  geom_boxplot() + 
  facet_wrap(vars(visit), nrow=2)
```

> Q14. What antigens show differences in the level of IgG1 antibody titers recognizing them over time? Why these and not others?

FIM2/3 shows the most difference in the level of IgG1 antibody as they are the fibers with the cell adhesion markers.  TT (tetanus toxin) also shows some difference in IgG1 antibody as it inhibits the release of neurotransmitters. FHA (filamentous hemagglutinin) plays a role in host-cell binding and infection. 



We can attempt to examine differences between wP and aP here by setting color and/or facet values of the plot to include infancy_vac status (see below). However these plots tend to be rather busy and thus hard to interpret easily.

```{r}
ggplot(ig1) +
  aes(MFI, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  facet_wrap(vars(visit), nrow=2) +
  theme_bw()
```

We can add `infancy_vac` to the faceting: 

```{r}
ggplot(ig1) +
  aes(MFI, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  facet_wrap(vars(infancy_vac, visit), nrow=2)

```

> Q15. Filter to pull out only two specific antigens for analysis and create a boxplot for each. You can chose any you like. Below I picked a “control” antigen (“Measles”, that is not in our vaccines) and a clear antigen of interest (“FIM2/3”, extra-cellular fimbriae proteins from B. pertussis that participate in substrate attachment).

```{r}
filter(ig1, antigen=="Measles") %>%
  ggplot() +
  aes(MFI, col=infancy_vac) +
  geom_boxplot(show.legend = FALSE) +
  facet_wrap(vars(visit)) +
  theme_bw() + 
  ggtitle("Measles antigen levels per visit (wP teal, aP red)")
```

```{r}
filter(ig1, antigen=="FIM2/3") %>%
  ggplot() +
  aes(MFI, col=infancy_vac) +
  geom_boxplot(show.legend = FALSE) +
  facet_wrap(vars(visit)) +
  theme_bw() +
  ggtitle("FIM2/3 antigen levels per visit (wP teal, aP red)")
```

> Q16. What do you notice about these two antigens time course and the FIM2/3 data in particular?

FIM2/3 for both aP and wP groups increase over time compared to measles. It seems that FIM2/3 antigen levels reaches a peak at visit 5.

> Q17. Do you see any clear difference in aP vs. wP responses?

There is not too big of a difference. However, aP antigen levels do tend to increase and surpass wP at days 4, 6, 7. 


## Obtaining CMI-PB RNASeq Data

For RNA-Seq data, the API query mechanism quickly hits the web browser interface limit for file size. We will present alternative download mechanisms for larger CMI-PB datasets in the next section. However, we can still do “targeted” RNA-Seq querys via the web accessible API.

For example we can obtain RNA-Seq results for a specific ENSEMBLE gene identifier or multiple identifiers combined with the & character:
```{r}
# For example use the following URL
# https://www.cmi-pb.org/api/v2/rnaseq?versioned_ensembl_gene_id=eq.ENSG00000211896.7
```
This link is related to the key gene involved in the expression of any IgG1 antibody -- specifically the IGHG1 gene.

```{r}
url <- "https://www.cmi-pb.org/api/v2/rnaseq?versioned_ensembl_gene_id=eq.ENSG00000211896.7"

rna <- read_json(url, simplifyVector = TRUE) 
```


We will join together the `rna` expression data with our metadata of sample and specimen data, `meta`. Now we can look at the genes' TPM expression values over aP/wP status and at different time visits. 

```{r}
#meta <- inner_join(specimen, subject)
ssrna <- inner_join(rna, meta)
```


> Q18. Make a plot of the time course of gene expression for IGHG1 gene (i.e. a plot of visit vs. tpm).

```{r}
ggplot(ssrna) +
  aes(visit, tpm, group=subject_id) +
  geom_point() +
  geom_line(alpha=0.2)
```

> Q19. What do you notice about the expression of this gene (i.e. when is it at it’s maximum level)?

The maximum expression of the gene occurs consistently on visist 4 for the samples. There's a very sharp increase in gene expression from visit 3 to visit 4 and a sharp decline between visit 4 and 5. 


> Q20. Does this pattern in time match the trend of antibody titer data? If not, why not?

The patterns do not match. The gene is highly expressed at a certain point whie the cells are making antibodies, which are long lived. THe antibody titer data has a more gradual change as opposed to the sharp peaks of the gene expression. 




We can dig deeper and color and/or facet by `infancy_vac` status:

```{r}
ggplot(ssrna) +
  aes(tpm, col=infancy_vac) +
  geom_boxplot() +
  facet_wrap(vars(visit))
```

There is no obvious wP vs. aP differences here even if we focus in on a particular visit:

```{r}
ssrna %>%  
  filter(visit==4) %>% 
  ggplot() +
    aes(tpm, col=infancy_vac) + geom_density() + 
    geom_rug() 

```







