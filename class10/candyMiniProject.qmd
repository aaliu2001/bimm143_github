---
title: "Halloween Candy Mini Project"
author: Angela Liu
format: gfm
prefer-html: true
---

## Section 1: Importing candy data

Importing the data:
```{r}
candy_file <- "candy-data.csv"

candy = read.csv(candy_file, row.names=1)
head(candy)
```

> Q1. How many different candy types are in this dataset?

```{r}
nrow(candy)
```

There are 85 candy types in the data set.

>Q2. How many fruity candy types are in the dataset?

```{r}
table(candy$fruity)
```

There are 38 fruity candy types. 

## What is you favorite candy?

We will use `winpercent` variable to see the percentage of people who prefer a selected candy over the a randomly chosen one.

```{r}
candy["Twix", ]$winpercent
```

>Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Milky Way", ]$winpercent
```
My favorite candies are Milky Ways and its winpercent value is 73.1%.

>Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat", ]$winpercent

```
The winpercent value for Kit Kat is 76.8%.

>Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars", ]$winpercent
```

The winpercent value is 49.7%.


Let's use the `skimr()` function to see a quick overview of our dataset.

```{r}
# install.packages("skimr")
library("skimr")
skim(candy)
```

>Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The `winpercent` column is a different scale than the rest of the columns since the others are mainly 0's or 1's to indicate true or false. 

>Q7. What do you think a zero and one represent for the candy$chocolate column?

The zero represents no chocolate, while the one represents that there is chocolate in the candy.

>Q8. Plot a histogram of winpercent values

```{r}
hist(candy$winpercent)
```


>Q9. Is the distribution of winpercent values symmetrical?

No, the distribution is slightly skewed right.


>Q10. Is the center of the distribution above or below 50%?

The center of the distribution is below 50%.

>Q11. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
# mean of chocolate candy rank
meanChocolate <- mean(candy$winpercent[as.logical(candy$chocolate)])
meanChocolate

# mean of fruit candy rank
meanFruity <- mean(candy$winpercent[as.logical(candy$fruity)])
meanFruity

# to see if chocolate candy is ranked higher than fruit candy
as.logical(meanChocolate > meanFruity)
```

On average, chocolate candy is ranked higher than fruity candy.

>Q12. Is this difference statistically significant?

```{r}
t.test(x = candy$chocolate, y = candy$fruity, c, alternative = "two.sided", mu = 0, paired = FALSE, var.equal = FALSE, conf.level = 0.95)
```

Since the true difference in means is not 0, the t.test reflects that there is a statistical significant difference between the means of the chocolate and fruity candy. 

## Section 3: Overall Candy Rankings

>Q13. What are the five least liked candy types in this set?

Here we sort the dataset by order of `winpercent` 
```{r}
head(candy[order(candy$winpercent),], n=5)
```
The five least liked candy types in the set are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, Jawbusters.

>Q14. What are the top 5 all time favorite candy types out of this set?

```{r}
# order the list in decreasing order of winpercent
head(candy[order(candy$winpercent, decreasing = TRUE),], n=5)
```

The top 5 all time favorite candy types are Reese's Peanut Buttercups, Reese's miniatures, Twix, Kit Kat, and Snickers.


>Q15. Make a first barplot of candy ranking based on winpercent values.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

>Q16. This is quite ugly, use the reorder() function to get the bars sorted by winpercent?

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

Now let's add some color: 
```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"
```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

Now, for the first time, using this plot we can answer questions like:
> Q17. What is the worst ranked chocolate candy?

The worst ranked chocolate candy (chocolate colored in the chart) is Sixlets.

> Q18. What is the best ranked fruity candy?

The best ranked fruity candy (colored pink) are Starbursts.


## Section 4: Taking a look at pricepercent

Let's plot `winpercent` vs `pricepercent`. The `pricepercent` variable shows the percentile rank of the candy's price in comparison to other candies.

```{r}
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

> Q19. Which candy type is the highest ranked in terms of winpercent for the least money - i.e. offers the most bang for your buck?

The fruity candy (marked in pink) are ranked highest in winpercent for less money (lower pricepercent). 


> Q20. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE) 
head( candy[ord,c(11,12)], n=5 )
```

The top 5 most expensive candies by highest pricepercent are Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, Hershey's Milk Cocolate. The least popular (by winpercent) is Nik L Nip. 


## Section 5: Exploring the Correlation Structure

We can plot correlation matrices with `corrplot` package.

```{r}
library(corrplot)
```

```{r}
cij <- cor(candy)
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Fruity and chocolate candies are anti-correlated as they have very red dots (negative values).

> Q23. Similarly, what two variables are most positively correlated?

It seems that winpercent and chocolate along with chocolate and bar are positively correlated.


## Section 6: PCA

We can apply PCA to our dataset through `prcomp()`. 

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

Now we plot a PCA score plot of PC1 vs PC2. 
```{r}
plot(pca$x[,1:2])
```

Adding some color and character:

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```


In order to use ggplot2, we need to have an input data.frame with a separate column for the different aesthetics in the final plot. We will make a new data.frame that includes both the PCA results and candy data. 

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])

```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)
p
```


The `ggrepel` package can label the plot with candy names that do not overlap.

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 15)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

To make a more interactive plot where you can hover and see labels, `plotly` is quite useful.

```{r}
# install.packages("plotly")
# library(plotly)
```

```{r}
# ggplotly(p)
```

Now when we hover a mouse over a point, we can see the label name, PC1, PC2, and  winpercent. 

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

The variables fruity, hard, and pluribus are picked up strongly by PC1 in the positive direction. This makes sense as there is more variance in the fruity, hard, and pluribus variables. A pluribus would have more variance since there are different types of candies included, leading to more variance. 




